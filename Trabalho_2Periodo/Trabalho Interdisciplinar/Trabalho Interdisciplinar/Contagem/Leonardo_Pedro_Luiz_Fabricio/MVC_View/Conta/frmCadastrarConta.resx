<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>